# Generated by Django 5.1.2 on 2024-11-25 16:23

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CapacityType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle_type', models.CharField(max_length=50)),
                ('max_capacity', models.IntegerField(validators=[django.core.validators.MaxValueValidator(50)])),
            ],
        ),
        migrations.CreateModel(
            name='NearestLandmark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('landmark_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ProviderRepresentative',
            fields=[
                ('representative_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, null=True, unique=True)),
                ('representative_cnic', models.CharField(max_length=15, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator(message='CNIC must be in the format XXXX-XXXXXXX-X', regex='^\\d{5}-\\d{7}-\\d{1}$')])),
                ('representative_contact', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('route_num', models.IntegerField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='VehicleStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Stop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('nearest_landmark', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='transport.nearestlandmark')),
            ],
        ),
        migrations.CreateModel(
            name='RouteStop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stop_order', models.PositiveIntegerField()),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transport.route')),
                ('stop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transport.stop')),
            ],
            options={
                'ordering': ['stop_order'],
                'unique_together': {('route', 'stop_order')},
            },
        ),
        migrations.AddField(
            model_name='route',
            name='end_stop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='end_stop', to='transport.stop'),
        ),
        migrations.AddField(
            model_name='route',
            name='start_stop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='start_stop', to='transport.stop'),
        ),
        migrations.AddField(
            model_name='route',
            name='stops',
            field=models.ManyToManyField(related_name='stops', through='transport.RouteStop', to='transport.stop'),
        ),
        migrations.CreateModel(
            name='TransportProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('representative', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='transport.providerrepresentative')),
            ],
        ),
        migrations.AddField(
            model_name='route',
            name='appointed_provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='routes', to='transport.transportprovider'),
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('license_plate', models.CharField(default='ABC-123', max_length=50, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator(message='CNIC must be in the format ABC-123', regex='^[A-Z]{3}-\\d{3}$')])),
                ('allotted_seats', models.IntegerField()),
                ('tracking_id', models.IntegerField()),
                ('Last_maintenance_date', models.DateField()),
                ('capacity_type', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='transport.capacitytype')),
                ('route_no', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='transport.route')),
                ('transport_provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicles', to='transport.transportprovider')),
                ('status', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='transport.vehiclestatus')),
            ],
        ),
    ]
